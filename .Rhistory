library(reticulate)
reticulate::use_python("C://Users/Administrator/Anaconda3/python.exe")
reticulate::use_python("C://Users/Administrator/Anaconda3/python")
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale()
knitr::opts_chunk$set(echo = TRUE)
Sys.getlocale
Sys.getlocale()
reticulate::use_python("C://Users/administrator/Anaconda3/python")
getwd()
reticau
reticulate::repl_python()
exit
reticulate::repl_python()
1
load_iris()
exit
py$iris
iris
iris %>% colnames
library(tidyverse)
iris %>% colnames
rmarkdown::render('python.Rmd', output_file = '../index.html')
rmarkdown::render('python.Rmd', output_file = '../index.html')
rmarkdown::render('python.Rmd', output_file = '../index.html')
rmarkdown::render('python.Rmd', output_file = '../index.html')
rmarkdown::render('python.Rmd', output_file = '../index.html')
rmarkdown::render('python.Rmd', output_file = '../index.html')
knitr::opts_chunk$set(echo = TRUE)
rmarkdown::render('python.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
install.packages("prettydoc")
install.packages("prettydoc")
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
library(prettydoc)
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
reticulate::repl_python()
type(3.2)
class(3.2)
type(1.2)
type(1)
dtype(1)
ㄷ턋
exit
knitr::opts_chunk$set(echo = TRUE)
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
print("Hello world!")
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('index.Rmd', output_file = '../index.html')
rmarkdown::render('index.Rmd', output_file = '../index.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('index.Rmd', output_file = '../docs/index.html')
rmarkdown::render('index.Rmd', output_file = '../docs/index.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('index.Rmd', output_file = '../docs/index.html')
rmarkdown::render('index.Rmd', output_file = '../docs/index.html')
rmarkdown::render('index.Rmd', output_file = '../index.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
install.packages("rmdformats")
install.packages("rmdformats")
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
library(reticulate)
repl_python
repl_python()
type(5)
exit()
exit
install.packages("xaringan")
xaringan::inf_mr()
repl_python()
2*4.5
0.9/0.3
8//3
8%3
5**5
exit()
exit
type(1+1)
repl_python()
type(1+1)
exit
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
repl_python()
"DataScience Lab".index("L")
"DataScience Lab"[12]
exit
"010-5782-3579"[8]
repl_python()
"010-5782-3579"[8]
"010-5782-3579"[7]
exit
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('index.Rmd', output_file = '../docs/index.html')
rmarkdown::render('index.Rmd', output_file = '../docs/index.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
rmarkdown::render('dtype.Rmd', output_file = '../docs/dtype.html')
구간|설명|예시 코드|실행 결과
---|---|---|---
`[a:b]`|`a` 이상 `b` 미만까지 슬라이싱|`'www.naver.com'[4:9]`|`'naver'`
repl_python()
'www.naver.com'[4:9]
ㄷ턋
exit
repl_python()
"휴학, 복학, 재학"[:3]
"휴학, 복학, 재학"[:3]
안녕
print("안녕")
ㄷ턋
exit
library(xaringan)
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE)
reticulate::use_python("C://User/Administrator/Anaconda3/python")
knitr::opts_chunk$set(echo = TRUE)
reticulate::use_python("C://User/Administrator/Anaconda3/python")
xaringan::inf_mr()
rmarkdown::render("dtype.Rmd","../docs/dtype.html")
rmarkdown::render("dtype.Rmd","html","../docs/dtype.html")
rmarkdown::render("dtype.Rmd","HTML","../docs/dtype.html")
rmarkdown::render("dtype.Rmd","html_document","../docs/dtype.html")
getwd()
rmarkdown::render("dtype.Rmd","html_document","../docs/dtype.html")
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
xaringan
xaringan::inf_mr()
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
xaringan::infinite_moon_reader()
rmarkdown::render("dtype.Rmd",output_file = "../docs/dtype.html")
rmarkdown::render("index.Rmd",output_file = "../docs/index.html")
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE)
reticulate::use_python("C://User/Administrator/Anaconda3/python")
reticulate::repl_python()
mylist = [[1,2,3],[4,5,6],[7,8,9]] # 리스트 생성
['one', 'two', 'three', 'four', 'five'][:2]
exit()
exit
rmarkdown::render("dtype.Rmd", output_file = "../docs/dtype.html")
xaringan::inf_mr()
rmarkdown::render("index.Rmd", ououtput_file = "../docs/index/html")
rmarkdown::render("index.Rmd", ououtput_file = "../docs/index.html")
rmarkdown::render("index.Rmd", output_file = "../docs/index.html")
rmarkdown::render("index.Rmd", output_file = "../docs/index.html")
rmarkdown::render("dtype.Rmd", output_file = "../docs/dtype.html")
rmarkdown::render("index.Rmd", output_file = "../docs/index.html")
rmarkdown::render("index.Rmd", output_file = "../docs/index.html")
rmarkdown::render("dtype.Rmd", output_file = "../docs/dtype.html")
rmarkdown::render("index.Rmd", output_file = "../docs/index.html")
rmarkdown::render("index.Rmd", output_file = "../docs/index.html")
rmarkdown::render("index.Rmd", output_file = "../docs/index.html")
xaringan::inf_me()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_Mr()
xaringan::inf_mr()
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE)
reticulate::use_python("C://User/Administrator/Anaconda3/python3")
data("gatminder")
data("gapminder")
library(gapminder)
install.packages("gampminder")
install.packages("gapminder")
install.packages("gapminder")
Sys.getlocale()
Sys.setlocale("LC_ALL","KO_kr.UTF-8")
Sys.setlocale("LC_ALL","ko_KR.UTF-8")
Sys.setlocale("LC_ALL","ko_KR")
Sys.setlocale("LC_ALL","KR")
Sys.setlocale("LC_ALL","ko")
install.packages("gapminder", lib="C:/R/R-3.6.1/library")
library(gapminder)
head(gapminder)
nrow(gapminder)
write.csv(gapminder, "data/gapminder.csv")
write.csv(gapminder, "data/gapminder.csv", row.names=F)
library(tidyverse)
gapminder$year %>% unique()
gapminder %>% filter(year==2007)
gapminder %>% filter(year==2007) %>% select(country) %>% unique()
xaringan::inf_mr()
xaringan::inf_mr()
reticulate::use_python("C://User/Administrator/Anaconda3/python3")
library(gapminder)
library(tidyverse)
gapminder %>% select(country) %>% unique
gapminder %>% select(country) %>% unique %>% View
xaringan::inf_mr()
